<%= render :partial => 'intro' %>

<div id='main-2'>
 <div class='warning'>Please select a challenge first!</div>

  <div class='tabs'>
      <ul class='tablist'>
        <li>
          <a href='<%= welcome_challengeCurated_path %>'>
            <span class='icon ribbon'></span>
            <h1>Featured Challenges</h1>
          </a>
        </li>
        <li class='active'>
          <a href='<%= welcome_playerChallenge_path %>'>
            <span class='icon build'></span>
            <h1>Build Your Challenge</h1>
          </a>
        </li>
      </ul>

    <div class='categories'>
      <%= link_to 'Player Challenge', welcome_playerChallenge_path, :class => 'active' %>
      <%= link_to 'Game Challenge', welcome_gameChallenge_path %>
      <%= link_to 'Team Challenge', welcome_teamChallenge_path %>
    </div>
    <div class='explanation'>
          <p>Player challenges are created around specific individuals on a team. The challenges you create in this category will revolve around their specific performance, and theirâ€™s alone.</p>

          <p><strong class='italic'>Example:</strong> &ldquo;<strong class='yellow'>David Harris</strong> will have the most <strong class='yellow'>touchdowns</strong> this week.&rdquo;</p>
    </div>

    <ul class='actions'>
      <form name="playerChallenge" id="playerChallenge" onSubmit="return false;">
        <li class='row'>
          <div class='name'>
            <h3>Challenge:</h3>
            <small>Only you will choose this</small>
          </div>
          <select class="player-challenge" name="challenge" id="challenge" onchange="setChallenge(this.value)">
            <option value="0">Select your challenge</option>
            <% @challenges.each do |challenge| %>
              <option value="<%=challenge['template_id']%>"><%=challenge['display_text']%>
            <% end %>
          </select>
        </li>

        <li class='row' id='player-option-select'>
          <div class='name'>
            <h3>Challenge Type:</h3>
          </div>
          <div class='option-1'>
          <!-- ID must be changed to 'type' -->
            <input onchange="setType(this.value);" type="radio" id="radio-3" name="type" value="any" checked />
            <label class='radio-3' for='radio-3'></label>
            <h4>Single Player</h4>
            <small>Participants can choose any player</small>
          </div>
          <div class='option-2'>
           <input onchange="setType(this.value);" type="radio" id="radio-4" name="type" value="pvp" />
            <label class='radio-4' for='radio-4' name='type' value='any'></label>
            <h4>Player vs. Player</h4>
            <small>Participants can choose between 2 players</small>
          </div>
        </li>

        <li class='row'>
          <div class='name'>
            <h3>Possible Picks:</h3>
            <small>Your friends will pick one</small>
          </div>
          <ol class='player-select'>
            <li>
              <input class='autocomplete-field'>
              <span>or</span>
              <div class='custom-select double'>
                <div class='trigger'></div>
                <div class='box'>
                  <p>Browse players</p>
                  <div class='extra-boxes'>
                    <select class='lighter' name="team1" id="team1" onchange="getPlayers(this.value,'player1');">
                      <option value="0">Loading...</option>
                    </select>
                    <select class='lighter2' id='player1' name='player1'>
                      <option value='0'>Loading...</option>
                    </select>
                  </div>
                </div>
                <span class='divider'></span>
                <span class='arrow first'></span>
              </div>
            </li>

            <div class='player-preview'></div>
             <li class='pvp'>
                <input class='autocomplete-field'>
                <span>or</span>
                <div class='custom-select double2'>
                  <div class='trigger'></div>
                  <div class='box'>
                    <p>Browse players</p>
                    <div class='extra-boxes'>
                      <select class='lighter3' name="team2" id="team2" onchange="getPlayers(this.value,'player2');">
                        <option value="0">Loading...</option>
                      </select>
                      <select class='lighter4' id='player2' name='player2'>
                        <option value='0'>Loading...</option>
                      </select>
                    </div>
                  </div>
                  <span class='divider'></span>
                  <span class='arrow first'></span>
                </div>
              </li>

              <div class='player-preview2'></div>

          </ol>
        </li>
          <!-- Noel's recently updated code -->
          <li class='row'>
             <div class='name'>
              <h3>Privacy:</h3>
            </div>
            <div class='option-1'>
              <!-- id should be 'privacy' -->
              <input onchange="setType(this.value);" type="radio" id="radio-5" class="privacy-option" name="privacy" value="true" checked />
              <label class='radio-5' for='radio-5'></label> <!-- public -->
              <h4>Public</h4>
              <small>Anyone can participate</small>
            </div>
            <div class='option-2'>
              <!-- id should be 'privacy' -->
              <input onchange="setType(this.value);" type="radio" id="radio-6" class="privacy-option" name="privacy" value="false" />
              <label class='radio-6' for='radio-6'></label> <!-- private -->
              <h4>Private</h4>
              <small>Only invited users can participate</small>
            </div>
          </li>
          <li class='row'>
            <div class='name'>
              <h3>Your Stakes:</h3>
              <small>now it's getting serious</small>
            </div>
              <select class='stakes-drop' name="stakes" id="stakes">
                <option value="0">CREATE CUSTOM STAKES</option>
                <option value="0">Change your facebook status to praise the winning pick</option>
                <option value="0">Bragging rights for the next 2 weeks</option>
                <option value="0">Losers tweet about their loss</option>
                <option value="0">Change desktop wallpaper to a picture of the winning pick</option>
              </select>
          </li>
          <li class='row'>
            <a href="#" id="continue" class="btn-red continue-challenge">Continue</a>
          </li>
        </li>
      </form>
    </ul>

</div> <!-- end tabs div -->

</div>

<script>

var CHALLENGE_TYPE = 'any';
var CHALLENGE_ID = '0';
$(document).ready(function() {

  // Jeff's Mods. Makes me cry a little on the inside, but hey they work

  // second player only appears one pvp challenge
  $("#player-option-select input").change(function(){
    if ($(this).val() == 'pvp') {
      $('.pvp').fadeIn();
			$('.player-preview2').fadeIn();
    } else {
      $('.pvp').fadeOut();
			$('.player-preview2').fadeOut();
    }
  });

  var double_offset = $('.double').offset();
  $('.warning').css({ top: (double_offset.top - 45), left: (double_offset.left - 20) });

  var challenge_set = false;

  $('.player-challenge-custom li').live('mouseup', function(){
    setChallenge($(this).data().val);
    challenge_set = true;
  });

  // drop down the double select box
  var double_down = false; // ha, ha
  var boxes_loaded = false;
  $('.double .trigger').click(function() {

    if (!boxes_loaded) {
      $(this).parent().find('select.lighter').sweetSelect();
      boxes_loaded = true;
    }

    if (!double_down && !challenge_set) {
      $('.warning').stop(true,true).fadeIn().delay(800).fadeOut();
    } else if (!double_down && challenge_set) {
      $(this).parent().addClass('down');
      $(this).parent().find('.extra-boxes').show();
      double_down = true;
    } else {
      $(this).parent().removeClass('down');
      $(this).parent().find('.extra-boxes').hide();
      double_down = false;
    }
  });

  // drop down the second double select box
  var double_down2 = false; // ha, ha
  var boxes_loaded2 = false;
  $('.double2 .trigger').click(function() {

    if (!boxes_loaded2) {
      $(this).parent().find('select.lighter3').sweetSelect();
      boxes_loaded2 = true;
    }

    if (!double_down2 && !challenge_set) {
      $('.warning').stop(true,true).fadeIn().delay(800).fadeOut();
    } else if (!double_down2 && challenge_set) {
      $(this).parent().addClass('down');
      $(this).parent().find('.extra-boxes').show();
      double_down2 = true;
    } else {
      $(this).parent().removeClass('down');
      $(this).parent().find('.extra-boxes').hide();
      double_down2 = false;
    }
  });

  var first_pick = false;
  $('.lighter-custom li').live('mouseup', function() {
    getPlayers($(this).data().val,'player1');

    if (!first_pick) {
     $('.lighter2').sweetSelect();
     first_pick = true;
    } else {
      var double_box = $(this).closest('.double .box .extra-boxes');
      $('.lighter2-custom').find('select').appendTo(double_box);
      $('.lighter2-custom').remove();
      $('.lighter2').sweetSelect();
    }
  });

  var first_pick2 = false;
  $('.lighter3-custom li').live('mouseup', function() {
    getPlayers($(this).data().val,'player2');
    if (!first_pick) {
     $('.lighter4').sweetSelect();
     first_pick = true;
    } else {
      var double_box = $(this).closest('.double2 .box .extra-boxes');
      $('.lighter4-custom').find('select').appendTo(double_box);
      $('.lighter4-custom').remove();
      $('.lighter4').sweetSelect();
    }
  });

  $('.lighter2-custom li').live('mouseup', function(){
     var player_id = $(this).data().val;
     var temp = $(this).text();
     var player_name = temp.slice(0, -4);
     var position = temp.substring(temp.length-3);
     var team = $(this).closest('.double').find('.lighter-custom .box').text();
     var image_url = "http://static.nfl.com/static/content/public/image/getty/headshot/" + player_id[0] + "/" + player_id[1] + "/" + player_id[2] + "/" + player_id + ".jpg";
    var image_tag = "<img alt='" + player_name + "' class='player-photo small' src='" + image_url + "' />";
    var text_tags = "<h5>" + player_name + "</h5> <p>" + position + ", " + team + "</p>";
    $('.player-preview').html(image_tag + "<div class='text'></div>");
    $('.player-preview .text').html(text_tags);
    $('.double .trigger').trigger('click');
  });

  $('.lighter4-custom li').live('mouseup', function(){
     var player_id = $(this).data().val;
     var temp = $(this).text();
     var player_name = temp.slice(0, -4);
     var position = temp.substring(temp.length-3);
     var team = $(this).closest('.double2').find('.lighter3-custom .box').text();
     var image_url = "http://static.nfl.com/static/content/public/image/getty/headshot/" + player_id[0] + "/" + player_id[1] + "/" + player_id[2] + "/" + player_id + ".jpg";
    var image_tag = "<img alt='" + player_name + "' class='player-photo small' src='" + image_url + "' />";
    var text_tags = "<h5>" + player_name + "</h5> <p>" + position + ", " + team + "</p>";
    $('.player-preview2').html(image_tag + "<div class='text'></div>");
    $('.player-preview2 .text').html(text_tags);
    $('.double2 .trigger').trigger('click');
  });

  // end jeff's slightly painful gang of live functions

  $('h2#header').empty().append('Loading User...');
  fbConnect();
  setType(CHALLENGE_TYPE);
  setChallenge(CHALLENGE_ID);
  $('#continue').mousedown(function() { createChallenge(); });
});

function getStakes() {
  // Jeff: Adjust how you fetch the stakes here
  // Currently a simple text field.
  var input = $.trim($('#stakes').val());
  var stakes = (input.length) ? input : false;
  return(stakes);
}

/* Ajax */
function createChallenge() {
  var player1 = $('#player1').val();
  var player2 = $('#player2').val();
  var stakes = getStakes();
  var my_pick = 0;
  if (!stakes) {
    alert('Please set your stakes');
    return;
  }
  switch(CHALLENGE_TYPE) {
    case 'pvp': // Verify 2 players
      if ((player1 == '0') || (player2 == '0')) {
        alert('Please make your selections!');
        return;
      }
    break;
    case 'any': // Verify 1 Player
      if (player1 == '0') {
        alert('Please make your selections!');
        return;
      }
      my_pick = player1;
    break;
    default: // Who knows what they're doing
      alert('Please make your selections!');
      return;
  }
  if (CHALLENGE_ID == '0') { // Verify they've selected a challenge
    alert('Please make your selections!');
    return;
  }
  var challenge = {
    template_id : $('select#challenge').val(),
    stakes : stakes,
    player1_id: player1,
    player2_id: player2,
    challenge_subtype: CHALLENGE_TYPE,
    public: $('.privacy-option:checked').val(),
    featured : false
  }
  if (my_pick != 0)
    challenge.my_pick = my_pick;
  var request = {
    call:'api/challenges/player',
    dataMethod:'POST',
    data:{
      challenge:challenge
    },
    response:function(resp,args) {
      if(!resp.success) {
        alert(resp.message);
        return;
      }
      switch(CHALLENGE_TYPE) {
        case 'pvp':
        document.location.href = '/challenges/step2_'+CHALLENGE_TYPE+'/'+resp.data.challenge.id;
        break;

        default:
        document.location.href = '/challenges/'+resp.data.challenge.id;
      }
    }
  }
  if (USER.id != '0')
    API(request);
  else {
    REQUESTS = []
    REQUESTS.push(request); // Store for after FB Activation
    initConnect();
  }
}

function setType(id) {
  CHALLENGE_TYPE = id;
  switch(id) {
    case 'any':
    $('select#team2').hide();
    $('select#player2').hide();
    $('div#your_pick').hide();
    break;

    default:
    $('select#team2').show();
    $('select#player2').show();
    $('div#your_pick').show();
  }
}

function setChallenge(id) {
  CHALLENGE_ID = id;
  resetFields();
  formatExpression();
}

function getPositions() {
  var positions;
  switch(CHALLENGE_ID) {
    <% @challenges.each do |challenge| %>
    case '<%=challenge['template_id']%>':
      positions = <%=raw challenge['player_filter']%>
    break;
    <% end %>

    default:
      positions = []
  }
  return positions;
}

function getPlayers(team_id,target) {
  if (!team_id) {
    $('select#'+target).empty().append('<option value=0>Select Player</option>');
    return;
  }
  API({
    call:'api/players/search',
    dataMethod:'POST',
    data:{
      post:{
        team_id:team_id,
        position:getPositions()
      }
    },
    response:function(resp,args) {
      $('select#'+target).empty().append('<option value="0">Select Player</option>');
      $.each(resp.data,function(i,result){
        var player = result.player;
        var exists = findPlayer(player.player_id);
        if (exists.player_id == undefined)
          PLAYERS.push(player);
        $('select#'+target).append('<option value="'+player.player_id+'">'+player.first+' '+player.last+': '+player.position+'</option>');
      });
    }
  })
}

function findPlayer(player_id) {
  var resp = {};
  $.each(PLAYERS,function(i,player){
    if (player.player_id == player_id) {
      resp = player;
      return false;
    }
  })
  return resp;
}

function resetFields() {
  $('select#team1').empty().append('<option value="0">Team');
  $('select#team2').empty().append('<option value="0">Team');
  $('select#player1').empty().append('<option value="0">Player');
  $('select#player2').empty().append('<option value="0">Player');
  $.each(TEAMS,function(i,team){
    $('select#team1').append('<option value="'+team.id+'">'+team.name+'</option>');
    $('select#team2').append('<option value="'+team.id+'">'+team.name+'</option>');
  })
}

function formatExpression() {
  if ((CHALLENGE_ID == '0')){
    $('div.mypickpreview').empty().append('Make your selections!');
    return;
  }
  var p1id = $('#player1').val();
  var p2id = $('#player2').val();
  // Set Display Preview
  var exp = CHALLENGE_TEMPLATES[CHALLENGE_ID];
  switch(CHALLENGE_TYPE) {
    case 'pvp':
      if (p1id == '0' || p2id == '0')
        return; // Not satisfied
      var player1 = findPlayer(p1id);
      var player2 = findPlayer(p2id);
      exp = exp.replace("{PLAYER}",'<strong>'+player1.first+' '+player1.last+' or '+player2.first+' '+player2.last+'</strong>');
    break;
    case 'any':
      if (p1id == '0')
        return; // Not satisfied
      var player1 = findPlayer(p1id);
      exp = exp.replace("{PLAYER}",'<strong>'+player1.first+' '+player1.last+'</strong>');
    break;
  }
  $('div.mypickpreview').empty().append('"'+exp+'"');
}

var PLAYERS = [];

var TEAMS = [];
<% @teams.each do |team| %>
  TEAMS.push({ id: '<%= team.team_id %>', name: '<%= team.city %> <%= team.name %>' });
<% end %>

var CHALLENGE_TEMPLATES = {
<% @challenges.each do |challenge| %>
  <%= challenge['template_id'] %> : '<%=raw challenge['template_expression'] %>',
<% end %>
}

</script>